{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ListeNotifications(_ref){let{utilisateurId}=_ref;const[notifications,setNotifications]=useState([]);const token=localStorage.getItem('token');useEffect(()=>{const fetchNotifications=async()=>{try{const res=await axios.get(\"http://localhost:5000/api/notifications/\".concat(utilisateurId),{headers:{Authorization:token}});setNotifications(res.data);}catch(err){console.error('Erreur lors de la récupération des notifications:',err);setNotifications([]);}};fetchNotifications();},[utilisateurId,token]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Mes notifications\"}),/*#__PURE__*/_jsx(\"ul\",{children:notifications.map(n=>/*#__PURE__*/_jsxs(\"li\",{children:[n.message,\" \",/*#__PURE__*/_jsx(\"span\",{style:{color:n.lu?'green':'red'},children:n.lu?' (lu)':' (non lu)'})]},n.id))})]});}export default ListeNotifications;","map":{"version":3,"names":["React","useEffect","useState","axios","jsx","_jsx","jsxs","_jsxs","ListeNotifications","_ref","utilisateurId","notifications","setNotifications","token","localStorage","getItem","fetchNotifications","res","get","concat","headers","Authorization","data","err","console","error","children","map","n","message","style","color","lu","id"],"sources":["C:/Users/NGAHA NGAHA/preventis-Gestion-Sinistre/frontend/src/components/Notification/ListeNotifications.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nfunction ListeNotifications({ utilisateurId }) {\n  const [notifications, setNotifications] = useState([]);\n  const token = localStorage.getItem('token');\n\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const res = await axios.get(\n          `http://localhost:5000/api/notifications/${utilisateurId}`,\n          { headers: { Authorization: token } }\n        );\n        setNotifications(res.data);\n      } catch (err) {\n        console.error('Erreur lors de la récupération des notifications:', err);\n        setNotifications([]);\n      }\n    };\n    fetchNotifications();\n  }, [utilisateurId, token]);\n\n  return (\n    <div>\n      <h2>Mes notifications</h2>\n      <ul>\n        {notifications.map(n => (\n          <li key={n.id}>\n            {n.message} <span style={{color: n.lu ? 'green' : 'red'}}>{n.lu ? ' (lu)' : ' (non lu)'}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\nListeNotifications.propTypes = {\n  utilisateurId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number\n  ]).isRequired,\n};\n\nexport default ListeNotifications;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAElD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,kBAAkBA,CAAAC,IAAA,CAAoB,IAAnB,CAAEC,aAAc,CAAC,CAAAD,IAAA,CAC3C,KAAM,CAACE,aAAa,CAAEC,gBAAgB,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAAAW,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3Cd,SAAS,CAAC,IAAM,CACd,KAAM,CAAAe,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAd,KAAK,CAACe,GAAG,4CAAAC,MAAA,CACkBT,aAAa,EACxD,CAAEU,OAAO,CAAE,CAAEC,aAAa,CAAER,KAAM,CAAE,CACtC,CAAC,CACDD,gBAAgB,CAACK,GAAG,CAACK,IAAI,CAAC,CAC5B,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,mDAAmD,CAAEF,GAAG,CAAC,CACvEX,gBAAgB,CAAC,EAAE,CAAC,CACtB,CACF,CAAC,CACDI,kBAAkB,CAAC,CAAC,CACtB,CAAC,CAAE,CAACN,aAAa,CAAEG,KAAK,CAAC,CAAC,CAE1B,mBACEN,KAAA,QAAAmB,QAAA,eACErB,IAAA,OAAAqB,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1BrB,IAAA,OAAAqB,QAAA,CACGf,aAAa,CAACgB,GAAG,CAACC,CAAC,eAClBrB,KAAA,OAAAmB,QAAA,EACGE,CAAC,CAACC,OAAO,CAAC,GAAC,cAAAxB,IAAA,SAAMyB,KAAK,CAAE,CAACC,KAAK,CAAEH,CAAC,CAACI,EAAE,CAAG,OAAO,CAAG,KAAK,CAAE,CAAAN,QAAA,CAAEE,CAAC,CAACI,EAAE,CAAG,OAAO,CAAG,WAAW,CAAO,CAAC,GADxFJ,CAAC,CAACK,EAEP,CACL,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAQA,cAAe,CAAAzB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}